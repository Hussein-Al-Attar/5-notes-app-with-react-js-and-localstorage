{"version":3,"sources":["Components/NoteComponents/CreateNote.js","Components/NoteComponents/Note.js","Components/NoteComponents/Notes.js","Components/NoteComponents/Header.js","App.js","reportWebVitals.js","index.js"],"names":["CreateNote","_ref","textHandler","saveHandler","inputText","charLeft","length","React","createElement","className","style","background","cols","rows","value","placeholder","onChange","maxLength","onClick","LinearProgress","variant","Note","id","text","deleteNote","justifyContent","DeleteForeverOutlinedIcon","aria-hidden","Notes","_useState","useState","_useState2","_slicedToArray","notes","setNotes","_useState3","_useState4","setInputText","filteredNotes","filter","note","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","map","key","e","target","prevState","concat","_toConsumableArray","uuid","Header","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA+BeA,MA7Bf,SAAmBC,GAA0C,IAAvCC,EAAWD,EAAXC,YAAaC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UAGxCC,EADY,IACWD,EAAUE,OACvC,OACEC,IAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEC,WAAY,2BACzCJ,IAAAC,cAAA,YACEI,KAAK,KACLC,KAAK,IACLC,MAAOV,EACPW,YAAY,WACZC,SAAUd,EACVe,UAAU,QAEZV,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,QAAMC,UAAU,SAASJ,EAAS,SAClCE,IAAAC,cAAA,UAAQC,UAAU,aAAaS,QAASf,GAAa,SAIvDI,IAAAC,cAACW,IAAc,CACbV,UAAU,iBACVW,QAAQ,cACRN,MAAOT,uBCRAgB,MAff,SAAapB,GAA2B,IAAxBqB,EAAErB,EAAFqB,GAAIC,EAAItB,EAAJsB,KAAMC,EAAUvB,EAAVuB,WACxB,OACEjB,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,cAAcc,GAC7BhB,IAAAC,cAAA,OAAKC,UAAU,eAAeC,MAAO,CAAEe,eAAgB,aACrDlB,IAAAC,cAACkB,IAAyB,CACxBjB,UAAU,eACVS,QAAS,kBAAMM,EAAWF,IAC1BK,cAAY,oBC0DPC,MA9Df,WACE,IAAAC,EAC0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAAAI,EACYL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAvC/B,EAASgC,EAAA,GAAEC,EAAYD,EAAA,GAqBxBZ,EAAa,SAACF,GAClB,IAAMgB,EAAgBL,EAAMM,OAAO,SAACC,GAAI,OAAKA,EAAKlB,KAAOA,IACzDY,EAASI,IAiBX,OAZAG,oBAAU,WACR,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UACzCJ,GACFR,EAASQ,IAEV,IAGHD,oBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUf,KAC5C,CAACA,IAGF1B,IAAAC,cAAA,OAAKC,UAAU,SACZwB,EAAMgB,IAAI,SAACT,GAAI,OACdjC,IAAAC,cAACa,EAAI,CACH6B,IAAKV,EAAKlB,GACVA,GAAIkB,EAAKlB,GACTC,KAAMiB,EAAKjB,KACXC,WAAYA,MAGhBjB,IAAAC,cAACR,EAAU,CACTE,YAhDc,SAACiD,GACnBd,EAAac,EAAEC,OAAOtC,QAgDlBX,YA5Cc,WAClB+B,EAAS,SAACmB,GAAS,SAAAC,OAAAC,YACdF,GAAS,CACZ,CACE/B,GAAIkC,cACJjC,KAAMnB,OAIViC,EAAa,KAoCTjC,UAAWA,MCrDJqD,MARf,WACE,OACElD,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,MAAIC,UAAU,gBAAe,WCQpBiD,MARf,WACE,OACEnD,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACiD,EAAM,MACPlD,IAAAC,cAACoB,EAAK,QCIG+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAX,EAAA,GAAAY,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAA9D,GAAiD,IAA9CgE,EAAMhE,EAANgE,OAAQC,EAAMjE,EAANiE,OAAQC,EAAMlE,EAANkE,OAAQC,EAAMnE,EAANmE,OAAQC,EAAOpE,EAAPoE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCFdU,IAASC,OACPhE,IAAAC,cAACD,IAAMiE,WAAU,KACfjE,IAAAC,cAACkD,EAAG,OAENe,SAASC,eAAe,SAM1Bf","file":"static/js/main.18f4f47c.chunk.js","sourcesContent":["import LinearProgress from \"@mui/material/LinearProgress\";\r\nimport React from 'react'\r\nfunction CreateNote({ textHandler, saveHandler, inputText }) {\r\n  //character limit\r\n  const charLimit = 100;\r\n  const charLeft = charLimit - inputText.length;\r\n  return (\r\n    <div className=\"note\" style={{ background: \"rgba(255, 255, 255, 0)\" }}>\r\n      <textarea\r\n        cols=\"10\"\r\n        rows=\"5\"\r\n        value={inputText}\r\n        placeholder=\"Type....\"\r\n        onChange={textHandler}\r\n        maxLength=\"100\"\r\n      ></textarea>\r\n      <div className=\"note__footer\">\r\n        <span className=\"label\">{charLeft} left</span>\r\n        <button className=\"note__save\" onClick={saveHandler}>\r\n          Save\r\n        </button>\r\n      </div>\r\n      <LinearProgress\r\n        className=\"char__progress\"\r\n        variant=\"determinate\"\r\n        value={charLeft}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n","import DeleteForeverOutlinedIcon from \"@mui/icons-material/DeleteForeverOutlined\";\r\nimport React from 'react'\r\nfunction Note({ id, text, deleteNote }) {\r\n  return (\r\n    <div className=\"note\">\r\n      <div className=\"note__body\">{text}</div>\r\n      <div className=\"note__footer\" style={{ justifyContent: \"flex-end\" }}>\r\n        <DeleteForeverOutlinedIcon\r\n          className=\"note__delete\"\r\n          onClick={() => deleteNote(id)}\r\n          aria-hidden=\"true\"\r\n        ></DeleteForeverOutlinedIcon>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"../css/Note.css\";\r\nimport CreateNote from \"./CreateNote\";\r\nimport Note from \"./Note\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport React from 'react'\r\nfunction Notes() {\r\n  //states\r\n  const [notes, setNotes] = useState([]);\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  // get text and store in state\r\n  const textHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  // add new note to the state array\r\n  const saveHandler = () => {\r\n    setNotes((prevState) => [\r\n      ...prevState,\r\n      {\r\n        id: uuid(),\r\n        text: inputText\r\n      }\r\n    ]);\r\n    //clear the textarea\r\n    setInputText(\"\");\r\n  };\r\n\r\n  //delete note function\r\n  const deleteNote = (id) => {\r\n    const filteredNotes = notes.filter((note) => note.id !== id);\r\n    setNotes(filteredNotes);\r\n  };\r\n\r\n  //apply the save and get functions using useEffect\r\n  //get the saved notes and add them to the array\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(\"Notes\"));\r\n    if (data) {\r\n      setNotes(data);\r\n    }\r\n  }, []);\r\n\r\n  //saving data to local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Notes\", JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      {notes.map((note) => (\r\n        <Note\r\n          key={note.id}\r\n          id={note.id}\r\n          text={note.text}\r\n          deleteNote={deleteNote}\r\n        />\r\n      ))}\r\n      <CreateNote\r\n        textHandler={textHandler}\r\n        saveHandler={saveHandler}\r\n        inputText={inputText}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","import React from 'react'\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"notes__title\">Notes</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"./Components/css/App.css\";\r\nimport Notes from \"./Components/NoteComponents/Notes\";\r\nimport Header from \"./Components/NoteComponents/Header\";\r\nimport React from 'react'\r\nfunction App() {\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <Notes />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}